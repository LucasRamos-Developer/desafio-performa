{"version":3,"sources":["components/ProductCard.js","components/ProductRecommendation.js","App.js","serviceWorker.js","index.js"],"names":["ProductCard","price","html","react_default","a","createElement","className","href","this","props","data","detailUrl","title","name","src","imageName","alt","renderOldPrice","oldPrice","renderHTML","productInfo","paymentConditions","Component","ProductRecommendation","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","product","recommendation","self","window","X","response","console","log","setState","reference","item","components_ProductCard","key","businessId","lib_default","arrow","dots","infinite","speed","slidesToShow","slidesToScroll","map","react_load_script_lib_default","url","onCreate","handleScriptCreate","bind","App","components_ProductRecommendation","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc3da635.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport renderHTML from 'react-render-html';\n\nclass ProductCard extends Component {\n    renderOldPrice (price) {\n        let html = '';\n        if (price != null) {\n            html = \n                <span className=\"old\">\n                    De: {price}\n                </span>\n        }\n        return html;\n    }\n\n    render() {\n        return (\n            <div className=\"ProductCard\">\n                <div className=\"ProductCard-inner\">\n                    <a href={this.props.data.detailUrl} title={this.props.data.name} className=\"ProductCard-link link-box block\">\n                        <span className=\"ProductCard-image block\">\n                            <img src={this.props.data.imageName} alt={this.props.data.name}/>\n                        </span>\n                        <span className=\"ProductCard-details block\">\n                            <span className=\"ProductCard-details_name line\">\n                                 {this.props.data.name}\n                            </span>\n                            \n                            <span className=\"ProductCard-details_price line\">\n                                {this.renderOldPrice(this.props.data.oldPrice)}\n                                <span className=\"sale\">\n                                    <b>Por:</b> {this.props.data.price}\n                                </span>    \n                            </span>\n                           \n                            <span className=\"ProductCard-details_installment line\">\n                                {renderHTML(this.props.data.productInfo.paymentConditions)}\n                            </span>\n                        </span>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProductCard;","import React, { Component } from 'react';\nimport ProductCard from './ProductCard';\nimport Slider from \"react-slick\";\nimport Script from 'react-load-script';\n\nclass ProductRecommendation extends Component {\n    constructor () {\n        super();\n        this.state = {\n            product: {},\n            recommendation: []\n        }\n    }\n\n    componentWillMount () {\n\n    }\n\n    handleScriptCreate () {\n        const self = this;\n        window.X = function (response) {\n            let data = response.data;\n            console.log(data);\n            self.setState({\n                product: data.reference.item,\n                recommendation: data.recommendation\n            });\n        }\n    }\n\n\n    render() {\n        const slide_settings = {\n            arrow: true,\n            dots: true,\n            infinite: false,\n            speed: 500,\n            slidesToShow: 4,\n            slidesToScroll: 1\n        };\n\n        return (\n            <div className=\"ProductRecommendation\">\n                <div className=\"ProductRecommendation-row\">\n                    <div className=\"ProductRecommendation-ref \">\n                        <div className=\"title\">\n                            <h2>VocÃª visitou</h2>\n                        </div>\n                        <ProductCard key={this.state.product.businessId} data={this.state.product}/>\n                    </div>\n                    <div className=\"ProductRecommendation-slider\">\n                        <div className=\"title\">\n                            <h2>e talvez se interesse por: </h2>\n                        </div>\n                        <Slider {...slide_settings}>\n                            {this.state.recommendation.map(product => <ProductCard key={product.businessId} data={product}/>)}\n                        </Slider>\n                        <Script url=\"http://roberval.chaordicsystems.com/challenge/challenge.json?callback=X\" onCreate={this.handleScriptCreate.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProductRecommendation;","import React, { Component } from 'react';\nimport ProductRecommendation from './components/ProductRecommendation';\n\nclass App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"AppContainer\">\n\t\t\t\t\t<ProductRecommendation />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}